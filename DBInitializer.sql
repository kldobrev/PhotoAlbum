CREATE DATABASE PHOTOALBUM;
USE PHOTOALBUM;

-- Contains data about all users
CREATE TABLE USERS (
	USERNAME VARCHAR(80) NOT NULL PRIMARY KEY,
	PASS_HASH CHAR(64) NOT NULL,
	PASS_SALT VARCHAR(255) NOT NULL,
	PASS_HINT VARCHAR(255) NOT NULL,
	EMAIL VARCHAR(255) NOT NULL
);

-- Contains data about each user's settings
CREATE TABLE USERSETTINGS (
	USER VARCHAR(80) NOT NULL PRIMARY KEY REFERENCES USERS(USERNAME),
	NAME VARCHAR(255),
	BIRTHDATE DATE,
	OCCUPATION VARCHAR(255),
	ABOUT TEXT
);

-- The app provides a simple messaging functionality
CREATE TABLE MESSAGES (
	MSG_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FROM_USR VARCHAR(80) NOT NULL REFERENCES USERS(USERNAME),
	TO_USR VARCHAR(80) NOT NULL REFERENCES USERS(USERNAME),
	DELIVERED TIMESTAMP NOT NULL,
	CONTENT TEXT NOT NULL
);

-- Contains data about photo albums, created by users
CREATE TABLE ALBUMS (
	USER VARCHAR(80) NOT NULL REFERENCES USERS(USERNAME),
	TITLE VARCHAR(180) NOT NULL,
	ALBUM_TYPE VARCHAR(7) NOT NULL CHECK(ALBUM_TYPE IN ('public', 'private')),
	DESCRIPTION VARCHAR(255),
	RATING INT,
	PRIMARY KEY(USER, TITLE)
);

-- Contains data about uploaded photos by users
CREATE TABLE PHOTOS (
	PH_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	TITLE VARCHAR(180),
	ALBUM VARCHAR(180) NOT NULL REFERENCES ALBUMS(TITLE),
	USER VARCHAR(80) NOT NULL REFERENCES USERS(USERNAME), 
	DESCRIPTION VARCHAR(255),
	RATING INT
);

/* The app provides a twitter like functionality which allows
a user to follow another one which would allow him/her
to see the other one's public content
*/
CREATE TABLE FOLLOWS (
	FOLLOWER VARCHAR(180) NOT NULL REFERENCES USERS(USERNAME),
	FOLLOWING VARCHAR(180) NOT NULL REFERENCES USERS(USERNAME),
	PRIMARY KEY(FOLLOWER, FOLLOWING)
);
